### ---------------------------------------------
### Default Contessa configuration properties.
### ---------------------------------------------
contessa:
  ###
  ### The base dir path for any file system use
  ### in Contessa. For example file storage or
  ### content drop-boxes. Empty by default which
  ### implies that operators **must** set this
  ###  property.
  ###
  #base-dir:
  ###
  ### The storage type to use. Supports a small
  ### set of types:
  ###
  ### `SQL` ........ JDBC storage (default)
  ### `NOSQL` ...... MongoDB storage
  ### `FILES` ...... File system storage
  ### `RAM` ........ In-memory storage, for dev/test
  ### `NONE` ....... Disabled storage, for dev/test
  ### `MINIO` ...... Minio.io S3 compatible storage
  ### `CASSANDRA` .. Cassandra cluster storage
  ###
  store: SQL
  ###
  ### Toggles the available UIs on/off, allowing
  ### different types of access to media content
  ### through "upload" and "download".
  ###
  ### `web`  - simple GET/POST for upload and
  ###          direct media access.
  ###
  ### `rest` - with support for application/json
  ###          responses.
  ###
  ### `dir`  - directory, file or drop-folder based
  ###          interface.
  ###
  ### `amqp` - message broker based upload and
  ###          query/response support for
  ###          content entries.
  ###
  web.enabled: true
  rest.enabled: true
  dir.enabled: false
  amqp.enabled: false
  ###
  ### An optional list of cookie names, that are
  ### required to be set at all for any request.
  ### The actual content of the cookies is not
  ### checked, only for existence.
  ###
  #required-cookies:
  #  - required.cookie.foo
  #  - required.cookie.bar
  ###
  ### The cache-control max-age directive, in
  ### seconds. Valid range is up to 365 days,
  ### or 0-31536000.
  ###
  #max-age: 8640000 # 100 days (default).

### =============================================
### Minio.io - storage properties
###
### https://docs.minio.io/docs/java-client-quickstart-guide
### ---------------------------------------------
minio:
  ## URL to object storage service.
  endpoint:
  ## Access key is like user ID that uniquely identifies your account.
  access-key:
  ## Secret key is the password to your account.
  secret-key:

### ---------------------------------------------
### Customized Spring Boot configuration
### properties for the Contessa application.
### ---------------------------------------------
spring:
  application:
    name: contessa
  datasource:
    ## Default is an embedded database
    url: jdbc:h2:mem:contessa;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  jpa:
    hibernate:
      ddl-auto: none
  ### - Development only!
  #h2:
  #  console:
  #    enabled: true
  rabbitmq:
    ## Better defaults for RabbitMQ docker/default
    username: guest
    password: guest
### ---------------------------------------------
management:
  add-application-context-header: false
  ## Faster startup if disabled
  security.enabled: false
endpoints:
  enabled: false
logging:
  level:
    ### Ah... the sound of silence
    #root: ERROR
    ### Good for development
    com.studiomediatech.contessa: DEBUG
    ### Enable lines below for Hibernate/Query logs
    #org.hibernate.SQL: DEBUG
    #org.hibernate.type.descriptor.sql.BasicBinder: TRACE
---
spring:
  profiles: mariadb
  datasource:
    url: jdbc:mysql://localhost:3306/contessa
    username: root
---
spring:
  profiles: minio
contessa:
  store: MINIO
minio:
  endpoint: http://localhost:9000
  access-key: AKIAIOSFODNN7EXAMPLE
  secret-key: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
---
spring:
  profiles: cassandra
  data:
    cassandra:
      keyspace-name: contessa
contessa:
  store: CASSANDRA
